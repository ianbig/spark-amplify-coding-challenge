{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport ResultBar from './resultBar';\nimport ResultImg from './resultImg';\nimport NumberBar from './numberBar';\nimport { trackPromise } from 'react-promise-tracker';\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfResult: 0,\n      title: \"\",\n      year: \"\",\n      result: [],\n      type: \"\",\n      page: 1,\n      pageSize: 10\n    };\n    this.handleMovClick = this.handleMovClick.bind(this);\n  } // UNDO: handle error response state\n  // UNDO: handle 0 result\n\n\n  _OnResponse(response) {\n    return response.json();\n  }\n\n  _OnError() {\n    window.location.href = '/error';\n  }\n\n  componentDidMount() {\n    const url = sessionStorage.getItem(\"url\");\n    trackPromise(fetch(url).then(this._OnResponse).then(json => {\n      // console.log(json);\n      this.setState({\n        \"numberOfResult\": json['totalResults'],\n        \"result\": json[\"Search\"],\n        \"title\": sessionStorage.getItem(\"title\"),\n        \"year\": sessionStorage.getItem(\"year\"),\n        \"type\": sessionStorage.getItem(\"type\")\n      });\n    }).catch(this._OnError)); // use arrow function in setState to avoid this become undefined\n  }\n\n  handleMovClick(num) {\n    // console.log(this.state.page);\n    let url = sessionStorage.getItem('url');\n    url = url + \"&page=\" + num;\n    fetch(url).then(this._OnResponse).then(json => {\n      //console.log(url);\n      this.setState({\n        \"result\": json[\"Search\"],\n        \"page\": num\n      });\n    }).catch(this._OnError); // use arrow function in setState to avoid this become undefined\n  } // UNDO: movie year is not corresponding to specific\n\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"h3\", null, \"Current page: \", this.state.page), __jsx(ResultBar, {\n      number: this.state.numberOfResult,\n      type: this.state.type,\n      title: this.state.title,\n      year: this.state.year\n    }), __jsx(ResultImg, {\n      result: this.state.result\n    }), __jsx(NumberBar, {\n      currentPage: this.state.page,\n      total: this.state.numberOfResult,\n      goToPage: num => this.handleMovClick(num)\n    }));\n  }\n\n}\n\nexport default Result;","map":null,"metadata":{},"sourceType":"module"}