{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ResultBar from './resultBar';\nimport ResultImg from './resultImg';\nimport NumberBar from './numberBar';\nimport { trackPromise } from 'react-promise-tracker';\n\nvar Result = /*#__PURE__*/function (_React$Component) {\n  _inherits(Result, _React$Component);\n\n  var _super = _createSuper(Result);\n\n  function Result(props) {\n    var _this;\n\n    _classCallCheck(this, Result);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      numberOfResult: 0,\n      title: \"\",\n      year: \"\",\n      result: [],\n      type: \"\",\n      page: 1,\n      pageSize: 10\n    };\n    _this.handleMovClick = _this.handleMovClick.bind(_assertThisInitialized(_this));\n    return _this;\n  } // UNDO: handle error response state\n  // UNDO: handle 0 result\n\n\n  _createClass(Result, [{\n    key: \"_OnResponse\",\n    value: function _OnResponse(response) {\n      return response.json();\n    }\n  }, {\n    key: \"_OnError\",\n    value: function _OnError() {\n      window.location.href = '/error';\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = sessionStorage.getItem(\"url\");\n      trackPromise(fetch(url).then(this._OnResponse).then(function (json) {\n        // console.log(json);\n        _this2.setState({\n          \"numberOfResult\": json['totalResults'],\n          \"result\": json[\"Search\"],\n          \"title\": sessionStorage.getItem(\"title\"),\n          \"year\": sessionStorage.getItem(\"year\"),\n          \"type\": sessionStorage.getItem(\"type\")\n        });\n      })[\"catch\"](this._OnError)); // use arrow function in setState to avoid this become undefined\n    }\n  }, {\n    key: \"handleMovClick\",\n    value: function handleMovClick(num) {\n      var _this3 = this;\n\n      // console.log(this.state.page);\n      var url = sessionStorage.getItem('url');\n      url = url + \"&page=\" + num;\n      fetch(url).then(this._OnResponse).then(function (json) {\n        //console.log(url);\n        _this3.setState({\n          \"result\": json[\"Search\"],\n          \"page\": num\n        });\n      })[\"catch\"](this._OnError); // use arrow function in setState to avoid this become undefined\n    } // UNDO: movie year is not corresponding to specific\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(\"div\", null, __jsx(\"h3\", null, \"Current page: \", this.state.page), __jsx(ResultBar, {\n        number: this.state.numberOfResult,\n        type: this.state.type,\n        title: this.state.title,\n        year: this.state.year\n      }), __jsx(ResultImg, {\n        result: this.state.result\n      }), __jsx(NumberBar, {\n        currentPage: this.state.page,\n        total: this.state.numberOfResult,\n        goToPage: function goToPage(num) {\n          return _this4.handleMovClick(num);\n        }\n      }));\n    }\n  }]);\n\n  return Result;\n}(React.Component);\n\nexport default Result;","map":null,"metadata":{},"sourceType":"module"}