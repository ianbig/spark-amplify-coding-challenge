{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n\nvar NumberBar = /*#__PURE__*/function (_React$Component) {\n  _inherits(NumberBar, _React$Component);\n\n  var _super = _createSuper(NumberBar);\n\n  function NumberBar(props) {\n    var _this;\n\n    _classCallCheck(this, NumberBar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      currentPage: _this.props.currentPage\n    };\n    _this.goToPage = _this.goToPage.bind(_assertThisInitialized(_this));\n    _this.handleKeyUp = _this.handleKeyUp.bind(_assertThisInitialized(_this));\n    _this.changePageNum = _this.changePageNum.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NumberBar, [{\n    key: \"goToPage\",\n    value: function goToPage(num) {\n      this.setState({\n        currentPage: num\n      });\n      this.props.goToPage(num);\n    }\n  }, {\n    key: \"changePageNum\",\n    value: function changePageNum(event) {\n      console.log(event.target.value);\n      this.setState({\n        currentPage: event.target.value\n      });\n    }\n  }, {\n    key: \"handleKeyUp\",\n    value: function handleKeyUp(e, pageTotal) {\n      var value = e.target.value;\n      console.log(\"value: \" + value);\n      var event = e || window.event;\n      var code = event.keyCode || event.which || event.charCode;\n\n      if (code === 13) {\n        //enter\n        if (isNaN(value)) {\n          alert('Please input number');\n        } else if (value > pageTotal || value === null || value.trim() === '') {\n          alert('Please input valid page number');\n        } else {\n          window.location.hash = \"#\".concat(value);\n          this.goToPage(parseInt(value, 10)); //input valid number\n        }\n      }\n    }\n    /**\n     * UNDO: < and > replace previous and next\n     * UNDO: order check 1 and totalNum\n     * Emergent Bug: Unable to type number\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pageSize = 10;\n      var pageTotal = Math.ceil(this.props.total / pageSize);\n      return __jsx(\"div\", {\n        className: \"jsx-369339817\"\n      }, __jsx(\"a\", {\n        href: \"####\",\n        onClick: function onClick() {\n          return _this2.goToPage(_this2.state.currentPage - 1);\n        },\n        className: \"jsx-369339817\"\n      }, \" pre \"), __jsx(\"span\", {\n        className: \"jsx-369339817\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.changePageNum,\n        onKeyUp: function onKeyUp(event) {\n          return _this2.handleKeyUp(event, pageTotal);\n        },\n        className: \"jsx-369339817\"\n      }), \" / \", pageTotal), __jsx(\"a\", {\n        href: \"####\",\n        onClick: function onClick() {\n          return _this2.goToPage(_this2.state.currentPage + 1);\n        },\n        className: \"jsx-369339817\"\n      }, \" next \"), __jsx(_JSXStyle, {\n        id: \"369339817\"\n      }, [\"input.jsx-369339817{width:2vw;height:2vh;}\"]));\n    }\n  }]);\n\n  return NumberBar;\n}(React.Component);\n\nexport default NumberBar;","map":null,"metadata":{},"sourceType":"module"}