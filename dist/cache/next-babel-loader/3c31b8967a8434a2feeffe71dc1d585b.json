{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styles from './movie.module.css';\nimport { trackPromise } from 'react-promise-tracker';\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props); // UNDO: eliminate redundant state\n\n    this.state = {\n      plot: \"\",\n      poster: \"\",\n      title: \"\",\n      rating: \"\",\n      votes: 0,\n      genre: \"\",\n      actors: \"\",\n      director: \"\",\n      runtime: \"\"\n    };\n  }\n\n  _OnReady(response) {\n    return response.json();\n  }\n\n  _Error() {\n    alert(\"Error in fetching\");\n  }\n\n  addDefaultSrc(event) {\n    event.target.src = \"../error.jpg\";\n  }\n\n  componentDidMount() {\n    const imdbID = sessionStorage.getItem('imdbID');\n    const APIkey = sessionStorage.getItem(\"APIkey\"); // for maintainability\n\n    let url = \"https://www.omdbapi.com/?plot=full&apikey=\" + APIkey + \"&i=\" + imdbID;\n    trackPromise(fetch(url).then(this._OnReady).then(json => {\n      //console.log(json);\n      this.setState({\n        plot: json['Plot'],\n        poster: json['Poster'],\n        title: json['Title'],\n        rating: json['imdbRating'],\n        votes: json['imdbVotes'],\n        genere: json['Genre'],\n        actors: json['Actors'],\n        director: json['Director'],\n        runtime: json['Runtime']\n      });\n    }).catch(this._Error));\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: styles.container\n    }, __jsx(\"div\", {\n      className: styles.infoContainer\n    }, __jsx(\"div\", {\n      className: styles.flex_container_img\n    }, __jsx(\"img\", {\n      className: styles.imgprop,\n      src: this.state.poster,\n      onError: this.addDefaultSrc\n    })), __jsx(\"div\", {\n      className: styles.flex_container_info\n    }, __jsx(\"div\", {\n      className: styles.flex_item_head\n    }, this.state.title), __jsx(\"div\", {\n      className: styles.flex_item_info\n    }, __jsx(\"span\", null, \"Rating: \", this.state.rating, \" \"), __jsx(\"span\", null, \"IMDB Votes: \", this.state.votes, \" \"), __jsx(\"span\", null, \"Genre: \", this.state.genre), __jsx(\"span\", null, \"Director: \", this.state.director), __jsx(\"span\", null, \"Actors: \", this.state.actors), __jsx(\"span\", null, \"Runtime: \", this.state.runtime)))), __jsx(\"div\", {\n      className: styles.flex_item_plot\n    }, __jsx(\"section\", null, this.state.plot)));\n  }\n\n}\n\nexport default Movie;","map":null,"metadata":{},"sourceType":"module"}